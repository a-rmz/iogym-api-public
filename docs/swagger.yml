swagger: "2.0"
info:
  title: "IoGym"
  description: "Client API to interact with the data generated by the IoGyms"
  version: "1.0.0"
  contact:
    email: "armzprz@gmail.com"
  license:
    name: "Unlicensed"
host: "3b5sohbmo5.execute-api.us-west-2.amazonaws.com"
basePath: "/stage"
tags:
  - name: "users"
    description: "Access to users"
  - name: "sessions"
    description: "Access to sessions"
  - name: "devices"
    description: "Access to devices"
  - name: "gyms"
    description: "Access to gyms"
  - name: "challenges"
    description: "Access to challenges"
schemes:
- "https"
paths:
  /gyms/{gymId}/users:
    get:
      tags:
      - "users"
      summary: "Returns a user list"
      description: "Retrieve a list of users who belong to a gym"
      operationId: "getUsersByGym"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "Gym not found"
      # security:
      # - api_key: []
  /gyms/{gymId}/users/{userId}:
    get:
      tags:
      - "users"
      summary: "Returns a user"
      description: "Retrieve the detail of a user"
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "userId"
        required: true
        in: "path"
        description: "ID of the user to retrieve"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "User not found"
  /gyms/{gymId}/users/{userId}/sessions:
    get:
      tags:
      - "sessions"
      summary: "Returns a session list"
      description: "Retrieve the list of sessions belonging to a user"
      operationId: "getSessionsByUser"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "userId"
        required: true
        in: "path"
        description: "ID of the user to retrieve"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Session"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "User not found"
  /gyms/{gymId}/users/{userId}/sessions/{sessionId}:
    get:
      tags:
      - "sessions"
      summary: "Returns a session"
      description: "Retrieve the detail of a session"
      operationId: "getSessionsById"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "userId"
        required: true
        in: "path"
        description: "ID of the user to get challenges from"
        type: "string"
        format: "uuid-v4"
      - name: "sessionId"
        required: true
        in: "path"
        description: "ID of the session to retrieve"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Session"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "Session not found"
  /gyms/{gymId}/devices:
    get:
      tags:
      - "devices"
      summary: "Returns a device list"
      description: "Retrieve a list of devices who belong to a gym"
      operationId: "getDevicesByGym"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the devices from"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "Gym not found"
  /gyms/{gymId}/devices/{deviceId}:
    get:
      tags:
      - "devices"
      summary: "Returns a device list"
      description: "Retrieve the detail of a device"
      operationId: "getDeviceById"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "deviceId"
        required: true
        in: "path"
        description: "ID of the device to get detail"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Device"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "Device not found"
  /gyms:
    get:
      tags:
      - "gyms"
      summary: "Returns a gym list"
      description: "Retrieve a list of all gyms (restricted only to superusers)"
      operationId: "getGyms"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gym"
        403:
          description: "Invalid credentials"
  /gyms/{gymId}:
    get:
      tags:
      - "gyms"
      summary: "Returns a"
      description: "Retrieve a list of all gyms (restricted only to superusers)"
      operationId: "getGymById"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gym"
        403:
          description: "Invalid credentials"
        404:
          description: "Gym not found"
  /gyms/{gymId}/users/{userId}/challenges:
    get:
      tags:
      - "challenges"
      summary: "Returns a challenge list"
      description: "Retrieve the list of challenges belonging to a user"
      operationId: "getChallengesByUser"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "userId"
        required: true
        in: "path"
        description: "ID of the user to retrieve"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Challenge"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "User not found"
  /gyms/{gymId}/users/{userId}/challenges/{challengeId}:
    get:
      tags:
      - "challenges"
      summary: "Returns a challenge list"
      description: "Retrieve the detail of a challenge"
      operationId: "getChallengeById"
      produces:
      - "application/json"
      parameters:
      - name: "gymId"
        required: true
        in: "path"
        description: "ID of the gym to get the users from"
        type: "string"
        format: "uuid-v4"
      - name: "userId"
        required: true
        in: "path"
        description: "ID of the user to get challenges from"
        type: "string"
        format: "uuid-v4"
      - name: "challengeId"
        required: true
        in: "path"
        description: "ID of the challenge to retrieve"
        type: "string"
        format: "uuid-v4"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        403:
          description: "Invalid credentials"
        404:
          description: "User not found"
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        format: uuid-v4
      rfidCode:
        type: string
      name:
        type: string
      lastName:
        type: string
      email:
        type: string
      birthDate:
        type: string
        format: date
  Session:
    type: object
    properties:
      id:
        type: string
        format: uuid-v4
      duration:
        type: string
      date:
        type: string
        format: date
      name:
        type: string
      device:
        type: string
        format: uuid-v4
  Device:
    type: object
    properties:
      id:
        type: string
        format: uuid-v4
      name:
        type: string
      type:
        type: string
  Gym:
    type: object
    properties:
      id:
        type: string
        format: uuid-v4
      name:
        type: string
      address:
        type: string
  Challenge:
    type: object
    properties:
      id:
        type: string
        format: uuid-v4
      name:
        type: string
      description:
        type: string
      goal:
        type: number
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date